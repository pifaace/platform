<?php

namespace Piface\AppBundle\Repository;

use Doctrine\DBAL\Query\QueryBuilder;
use Doctrine\ORM\EntityRepository;

/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvertRepository extends EntityRepository
{
    public function countAdvert($id)
    {
        $qb = $this->createQueryBuilder('a');

        $qb
            ->select('COUNT(a)')
            ->where('a.user = :user')
            ->setParameter(':user', $id);

        return $qb->getQuery()->getSingleScalarResult();
    }

    public function getAdverts()
    {
        $qb = $this->createQueryBuilder('a');

        $qb
            ->leftJoin('a.image', 'img')
            ->addSelect('img')
            ->where('a.offCharter = 0')
            ->orderBy('a.createdAt', 'DESC');

        return $qb->getQuery()->getResult();
    }

    public function getMyAdverts($id)
    {
        $qb = $this->createQueryBuilder('a');

        $qb
            ->leftJoin('a.category', 'cat')
            ->addSelect('cat')
            ->leftJoin('a.image', 'img')
            ->addSelect('img')
            ->where('a.user = :user')
            ->andWhere('a.offCharter = 0')
            ->setParameter(':user', $id);

        return $qb->getQuery()->getResult();
    }

    public function findByKeyWord($keyWord)
    {
        $qb = $this->createQueryBuilder('w');

        $qb
            ->where('w.title LIKE :keyword')
            ->setParameter(':keyword', '%' . $keyWord . '%')
            ->orderBy('w.createdAt', 'DESC');

        return $qb->getQuery()->getResult();
    }

    public function findByCategory($category)
    {
        $qb = $this->createQueryBuilder('c');

        $qb
            ->leftJoin('c.image', 'img')
            ->addSelect('img')
            ->where('c.category = :category')
            ->setParameter(':category', $category)
            ->orderBy('c.createdAt', 'DESC');

        return $qb->getQuery()->getResult();
    }

    public function findByOptions($category, $keyWord)
    {
        $q = $this->createQueryBuilder('o');

        $q
            ->where('o.category = :category')
            ->setParameter(':category', $category)
            ->andWhere('o.title LIKE :keyword')
            ->setParameter(':keyword', '%' . $keyWord . '%')
            ->orderBy('o.createdAt', 'DESC');

        return $q->getQuery()->getResult();
    }

    public function isAuthorized($id)
    {
        $qb = $this->createQueryBuilder('a');

        $qb
            ->leftJoin('a.user', 'user')
            ->select('user.id')
            ->where('a.id = :id')
            ->setParameter(':id', $id);

        return $qb->getQuery()->getOneOrNullResult();
    }

    public function getOffCharter($advertId)
    {
        $qb = $this->createQueryBuilder('o');

        $qb
            ->select('o.offCharter')
            ->where('o.id = :advertId')
            ->setParameter(':advertId', $advertId);

        return $qb->getQuery()->getSingleScalarResult();
    }
}
